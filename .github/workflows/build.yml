name: Build Cross-Platform Executables

on:
  push:
    tags:
      - "v*"
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-qt6

      - name: Get version
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "version=dev-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Build executable
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            pyinstaller --onefile --windowed --clean --name HelloWorld main.py
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            pyinstaller --onefile --windowed --clean --name HelloWorld main.py
          else
            pyinstaller --onefile --windowed --clean --name HelloWorld main.py
          fi
        shell: bash

      - name: Create distribution package
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cd dist
            7z a -tzip ../HelloWorld-Windows-${{ steps.get_version.outputs.version }}.zip *
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            cd dist
            zip -r ../HelloWorld-MacOS-${{ steps.get_version.outputs.version }}.zip *
          else
            cd dist
            zip -r ../HelloWorld-Linux-${{ steps.get_version.outputs.version }}.zip *
          fi
        shell: bash

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: HelloWorld-${{ matrix.os }}-${{ steps.get_version.outputs.version }}
          path: HelloWorld-*-${{ steps.get_version.outputs.version }}.zip
          retention-days: 5

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
